package com.aurionpro.model;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class BoardTest {

	@Test
	void test() {
		fail("Not yet implemented");
	}
	
	private Board board;

    @BeforeEach
    void setUp() {
        board = new Board();
    }

    @Test
    void testGetCell() {
        Cell cell = board.getCell(1, 1);
        assertNotNull(cell);
    }

    @Test
    void testClear() {
        // Set some marks on the board
        board.getCell(0, 0).setMark(MarkType.X);
        board.getCell(1, 1).setMark(MarkType.O);

        // Clear the board
        board.clear();

        // Verify that all cells are now empty
        for (int row = 0; row < 3; row++) {
            for (int col = 0; col < 3; col++) {
                assertTrue(board.getCell(row, col).isEmpty());
            }
        }
    }

    @Test
    void testGetCurrentState() {
        // Set some marks on the board
        board.getCell(0, 0).setMark(MarkType.X);
        board.getCell(1, 1).setMark(MarkType.O);

        // Get the current state of the board
        MarkType[][] currentState = board.getCurrentState();

        // Verify that the marks are correctly reflected in the current state
        assertEquals(MarkType.X, currentState[0][0]);
        assertEquals(MarkType.O, currentState[1][1]);
    }
	

}
